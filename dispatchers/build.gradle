import com.chrynan.dispatchers.buildSrc.LibraryConstants

apply plugin: "kotlin-multiplatform"
apply plugin: "com.android.application"
apply plugin: "digital.wup.android-maven-publish"

group LibraryConstants.group
version LibraryConstants.versionName

kotlin {
    targets {
        jvm()
        js()
        android()
        ios()
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"

                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
            }
        }
        androidMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
            }
        }
    }
}

configurations {
    compileClasspath
}

android {
    compileSdkVersion LibraryConstants.androidCompileSdkVersion
    defaultConfig {
        minSdkVersion LibraryConstants.androidMinSdkVersion
        targetSdkVersion LibraryConstants.androidTargetSdkVersion
        versionCode LibraryConstants.versionCode
        versionName LibraryConstants.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            matchingFallbacks = ["debug"]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    sourceSets {
        main {
            manifest.srcFile "src/androidMain/AndroidManifest.xml"
            java.srcDirs = ["src/androidMain/kotlin"]
            res.srcDirs = ["src/androidMain/res"]
        }
        test {
            java.srcDirs = ["src/androidTest/kotlin"]
            res.srcDirs = ["src/androidTest/res"]
        }
    }
    configurations {
        cleanedAnnotations
        compile.exclude group: "org.jetbrains", module: "annotations"
    }
}

publishing {
    publications {
        kotlinMultiplatform {
            artifactId = "dispatchers"
        }
        jvm {
            artifactId = "dispatchers-jvm"
        }
        js {
            artifactId = "dispatchers-js"
        }
        iosArm64 {
            artifactId = "dispatchers-ios-arm64"
        }
        iosX64 {
            artifactId = "dispatchers-ios-x64"
        }
        metadata {
            artifactId = "dispatchers-metadata"
        }
    }
}
